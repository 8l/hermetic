#!/usr/bin/env python3

import os, sys
print(os.path.abspath('/usr/local/google/home/alivanov/hermetic/'))
sys.path.append(os.path.dirname(os.path.dirname(os.path.realpath(__file__))))
# print(sys.path)
import ast
from hermetic import hindley_milner_ast
from hermetic import converter
from hermetic import top_env
from hermetic import ll_ast
from hermetic import c_generator

def main(filename):
    with open(filename, 'r') as f:
        code = f.read()
    python_ast = ast.parse(code)
    hm_ast = converter.PythonConverter().convert(python_ast)
    print(str(hm_ast))
    try:
        print(hindley_milner_ast.analyse(hm_ast, top_env.TOP_ENV))
        print(str(hm_ast))
        typed_ast = ll_ast.convert_ast(hm_ast)
        print(typed_ast)
        c = c_generator.CGenerator(typed_ast).generate()
        with open(filename + '.c', 'w') as f:
            f.write(c)
    except (hindley_milner_ast.ParseError, hindley_milner_ast.TypeError, hindley_milner_ast.NotUnifiedError) as a:
        print('ERROR {a}'.format(a=a))

if __name__ == '__main__':
    if len(sys.argv) == 1:
        print('compile filename')
    else:
        main(sys.argv[1])



